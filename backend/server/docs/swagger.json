{
    "swagger": "2.0",
    "info": {
        "description": "TripDoodle Server API Docs",
        "title": "TripDoodle API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/api/v1",
    "paths": {
        "/posts": {
            "get": {
                "description": "Get all posts from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.PostsSuccessResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.PostErrorResponseType"
                        }
                    }
                }
            },
            "put": {
                "description": "Update post details in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "parameters": [
                    {
                        "description": "Update post",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdatePostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the post",
                        "schema": {
                            "$ref": "#/definitions/response.PostSuccessResponseType"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/response.PostErrorResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.PostErrorResponseType"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new post to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "parameters": [
                    {
                        "description": "Add post",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added the post",
                        "schema": {
                            "$ref": "#/definitions/response.PostSuccessResponseType"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/response.PostErrorResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.PostErrorResponseType"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a post from the database based on its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "parameters": [
                    {
                        "description": "Update post",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeletePostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Removed the post",
                        "schema": {
                            "$ref": "#/definitions/response.PostSuccessResponseType"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/response.PostErrorResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.PostErrorResponseType"
                        }
                    }
                }
            }
        },
        "/sights": {
            "get": {
                "description": "Get all sights from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sights"
                ],
                "summary": "Get all sights",
                "responses": {
                    "200": {
                        "description": "Successfully Got the sight",
                        "schema": {
                            "$ref": "#/definitions/response.SightsSuccessResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.SightErrorResponseType"
                        }
                    }
                }
            },
            "put": {
                "description": "Update sight details in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sights"
                ],
                "summary": "Update an existing sight",
                "parameters": [
                    {
                        "description": "Update sight",
                        "name": "sight",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateSightRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the sight",
                        "schema": {
                            "$ref": "#/definitions/response.SightSuccessResponseType"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/response.SightErrorResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.SightErrorResponseType"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new sight to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sights"
                ],
                "summary": "Add a new sight",
                "parameters": [
                    {
                        "description": "Add Sight",
                        "name": "sight",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.SightRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added the sight",
                        "schema": {
                            "$ref": "#/definitions/response.SightSuccessResponseType"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/response.SightErrorResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.SightErrorResponseType"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a sight from the database based on its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sights"
                ],
                "summary": "Remove a sight",
                "parameters": [
                    {
                        "description": "Update sight",
                        "name": "sight",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteSightRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Removed the sight",
                        "schema": {
                            "$ref": "#/definitions/response.SightSuccessResponseType"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/response.SightErrorResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.SightErrorResponseType"
                        }
                    }
                }
            }
        },
        "/sights/location": {
            "get": {
                "description": "Gets information about the tourist attractions currently located in the database Fetch all sights from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sights"
                ],
                "summary": "Get Current sights",
                "parameters": [
                    {
                        "type": "number",
                        "description": "Latitude for the sight",
                        "name": "Latitude",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Longitude for the sight",
                        "name": "Longitude",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Got the sight",
                        "schema": {
                            "$ref": "#/definitions/response.SightsSuccessResponseType"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/response.SightErrorResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.SightErrorResponseType"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Get all users from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UsersSuccessResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.UserErrorResponseType"
                        }
                    }
                }
            },
            "put": {
                "description": "Update user details in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "description": "Update user",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the user",
                        "schema": {
                            "$ref": "#/definitions/response.UserSuccessResponseType"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/response.UserErrorResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.UserErrorResponseType"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new user to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "description": "Add user",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added the user",
                        "schema": {
                            "$ref": "#/definitions/response.UserSuccessResponseType"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/response.UserErrorResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.UserErrorResponseType"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove user from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "description": "Delete user",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeleteUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the user",
                        "schema": {
                            "$ref": "#/definitions/response.UserSuccessResponseType"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/response.UserErrorResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.UserErrorResponseType"
                        }
                    }
                }
            }
        },
        "/users/check/email/{email}": {
            "get": {
                "description": "Check if email exists in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "User email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CheckResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.CheckErrorResponseType"
                        }
                    }
                }
            }
        },
        "/users/check/nickname/{nickname}": {
            "get": {
                "description": "Check if nickname exists in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "User nickname",
                        "name": "nickname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CheckResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.CheckErrorResponseType"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Login with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "description": "Login",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.CheckResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.CheckErrorResponseType"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Get a user from the database based on its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserSuccessResponseType"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.UserErrorResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.UserErrorResponseType"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.DeletePostRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "request.DeleteSightRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "request.DeleteUserRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        },
        "request.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.PostRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "sightId": {
                    "type": "integer"
                },
                "state": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "request.SightRequest": {
            "type": "object",
            "properties": {
                "buildingNumber": {
                    "type": "string"
                },
                "cityCountyDistrict": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "legalDong": {
                    "type": "string"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "ri": {
                    "type": "string"
                },
                "streetNumber": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.UpdatePostRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "state": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "request.UpdateSightRequest": {
            "type": "object",
            "properties": {
                "buildingNumber": {
                    "type": "string"
                },
                "cityCountyDistrict": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "legalDong": {
                    "type": "string"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "ri": {
                    "type": "string"
                },
                "streetNumber": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "request.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "request.UserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "response.CheckErrorResponseType": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "boolean"
                },
                "error": {},
                "state": {
                    "type": "boolean"
                }
            }
        },
        "response.CheckResponseType": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "boolean"
                },
                "error": {},
                "state": {
                    "type": "boolean"
                }
            }
        },
        "response.Post": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "sightId": {
                    "type": "integer"
                },
                "state": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "response.PostErrorResponseType": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Post"
                    }
                },
                "error": {},
                "state": {
                    "type": "boolean"
                }
            }
        },
        "response.PostSuccessResponseType": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.Post"
                },
                "error": {},
                "state": {
                    "type": "boolean"
                }
            }
        },
        "response.PostsSuccessResponseType": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Post"
                    }
                },
                "error": {},
                "state": {
                    "type": "boolean"
                }
            }
        },
        "response.Sight": {
            "type": "object",
            "properties": {
                "buildingNumber": {
                    "type": "string"
                },
                "cityCountyDistrict": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "legalDong": {
                    "type": "string"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "ri": {
                    "type": "string"
                },
                "streetNumber": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "response.SightErrorResponseType": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.Sight"
                },
                "error": {},
                "state": {
                    "type": "boolean"
                }
            }
        },
        "response.SightSuccessResponseType": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.Sight"
                },
                "error": {},
                "state": {
                    "type": "boolean"
                }
            }
        },
        "response.SightsSuccessResponseType": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Sight"
                    }
                },
                "error": {},
                "state": {
                    "type": "boolean"
                }
            }
        },
        "response.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "response.UserErrorResponseType": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.User"
                },
                "error": {},
                "state": {
                    "type": "boolean"
                }
            }
        },
        "response.UserSuccessResponseType": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.User"
                },
                "error": {},
                "state": {
                    "type": "boolean"
                }
            }
        },
        "response.UsersSuccessResponseType": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.User"
                    }
                },
                "error": {},
                "state": {
                    "type": "boolean"
                }
            }
        }
    }
}