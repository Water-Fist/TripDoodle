{
    "swagger": "2.0",
    "info": {
        "description": "TripDoodle Server API Docs",
        "title": "TripDoodle API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/posts": {
            "get": {
                "description": "Fetch all sights from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Get all posts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.PostsSuccessResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.PostErrorResponseType"
                        }
                    }
                }
            },
            "put": {
                "description": "Update post details in the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Update an existing post",
                "parameters": [
                    {
                        "description": "Update post",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UpdatePostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated the post",
                        "schema": {
                            "$ref": "#/definitions/response.PostSuccessResponseType"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/response.PostErrorResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.PostErrorResponseType"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new post to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Add a new post",
                "parameters": [
                    {
                        "description": "Add post",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.PostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully added the post",
                        "schema": {
                            "$ref": "#/definitions/response.PostSuccessResponseType"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/response.PostErrorResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.PostErrorResponseType"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a post from the database based on its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Remove a post",
                "parameters": [
                    {
                        "description": "Update post",
                        "name": "post",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.DeletePostRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully Removed the post",
                        "schema": {
                            "$ref": "#/definitions/response.PostSuccessResponseType"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/response.PostErrorResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/response.PostErrorResponseType"
                        }
                    }
                }
            }
        },
        "/sights": {
            "get": {
                "description": "Fetch all sights from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sights"
                ],
                "summary": "Get all sights",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SightsSuccessResponseType"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.SightsErrorResponseType"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "request.DeletePostRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "request.PostRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "imageUrl": {
                    "type": "string"
                },
                "sightId": {
                    "type": "integer"
                },
                "state": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "request.UpdatePostRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "state": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "response.Post": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imageUrl": {
                    "type": "string"
                },
                "sightId": {
                    "type": "integer"
                },
                "state": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "response.PostErrorResponseType": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Post"
                    }
                },
                "error": {},
                "state": {
                    "type": "boolean"
                }
            }
        },
        "response.PostSuccessResponseType": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/response.Post"
                },
                "error": {},
                "state": {
                    "type": "boolean"
                }
            }
        },
        "response.PostsSuccessResponseType": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Post"
                    }
                },
                "error": {},
                "state": {
                    "type": "boolean"
                }
            }
        },
        "response.Sight": {
            "type": "object",
            "properties": {
                "buildingNumber": {
                    "type": "string"
                },
                "cityCountyDistrict": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "latitude": {
                    "type": "number"
                },
                "legalDong": {
                    "type": "string"
                },
                "longitude": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "ri": {
                    "type": "string"
                },
                "streetNumber": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "response.SightsErrorResponseType": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Sight"
                    }
                },
                "error": {},
                "state": {
                    "type": "boolean"
                }
            }
        },
        "response.SightsSuccessResponseType": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/response.Sight"
                    }
                },
                "error": {},
                "state": {
                    "type": "boolean"
                }
            }
        }
    }
}